version: "3"
services:
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - ./opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node2 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - ./opensearch-data2:/usr/share/opensearch/data # Creates volume called opensearch-data2 and mounts it to the container
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - opensearch-net

  # data-prepper-test:
  #   image: opensearchproject/data-prepper:latest
  #   container_name: data-prepper-test
  #   volumes:
  #     - ./data-prepper/log-pipeline.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
  #     - ./test.log:/var/test/test.log
  #     - ./data-prepper/out:/var/output
  #   networks:
  #     - opensearch-net

  logstash-test:
    image: docker.elastic.co/logstash/logstash:8.13.2
    container_name: logstash-test
    volumes:
      # 하나의 pipline 할떄
      # - ./logstash/single:/usr/share/logstash/pipeline/
      # 멀티 pipline 할떄
      - ./logstash/pipelines/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/config:/etc/logstash/test/config/
      - ./test.log:/var/test/test.log
      - ./board.log:/var/test/board.log
      - ./board-2.log:/var/test/board-2.log
      - ./logstash/out:/var/output
    environment:
      - xpack.monitoring.enabled=false
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1
      - opensearch-dashboards

# volumes:
#   opensearch-data1:
#   opensearch-data2:

networks:
  opensearch-net:
# docker run --name data-prepper-test -v ./data-prepper/log_pipeline.yaml:/usr/share/data-prepper/pipelines/log_pipeline.yaml -v ./test.log:/var/test/test-log --network opensearch-net opensearchproject/data-prepper:2
